<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>MapDB</title><link>http://www.mapdb.org</link><description>MapDB provides concurrent Maps, Sets and Queues backed by disk storage or off-heap-memory. It is a fast and easy to use embedded Java database engine.</description><language>en</language><item><title>Credits</title><link>http://www.mapdb.org/credits.html</link><description>Most of MapDB was written by Jan Kotek. He started this project and pretty much runs the show.</description><pubDate>Wed, 12 Dec 2012 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/credits.html</guid></item><item><title>Features</title><link>http://www.mapdb.org/features.html</link><description>Most DBs engines juggle with byte arrays and leave serialization and caching to user. MapDB goes much further and it integrates instance cache, serialization and storage into single library. This seamless integration is necessary to achieve best user experience. In most cases MapDB ‘just works’.</description><pubDate>Wed, 12 Dec 2012 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/features.html</guid></item><item><title>General questions</title><link>http://www.mapdb.org/faq-general.html</link><description>Yes! MapDB is distributed under Apache 2 license, it can be modified, sold and used in commercial product. All documentation, unit tests and build scripts are published as well. I believe that MapDB has good chance to become the de facto standard Java storage engine. For that it needs permissive license and even LGPL could ruin its chances.</description><pubDate>Fri, 05 Jul 2013 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/faq-general.html</guid></item><item><title>Performance questions</title><link>http://www.mapdb.org/faq-performance.html</link><description>HashMap is better suited for large keys. TreeMap is suited for smaller keys. TreeMap may be also good choice for larger keys which can be delta-packed (strings, tuples).</description><pubDate>Fri, 05 Jul 2013 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/faq-performance.html</guid></item><item><title>Troubleshooting questions</title><link>http://www.mapdb.org/faq-problems.html</link><description>MapDB uses chained exception so user does not have to write try catch blocks. IOException is usually wrapped in IOError which is unchecked. So please always check root exception in the chain.</description><pubDate>Fri, 05 Jul 2013 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/faq-problems.html</guid></item><item><title>Are you running out of memory?</title><link>http://www.mapdb.org/a-offheap.html</link><description>Warning: benchmarks and text bellow may shock you!!!</description><pubDate>Sun, 28 Jul 2013 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/a-offheap.html</guid></item><item><title>Changelog</title><link>http://www.mapdb.org/changelog.html</link><description>Fixed problem in transaction log replay after unclean shutdown WAL checksum was broken, so it was disabled.</description><pubDate>Fri, 09 Aug 2013 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/changelog.html</guid></item><item><title>BTreeMap</title><link>http://www.mapdb.org/31-btreemap.html</link><description>Back to top</description><pubDate>Thu, 06 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/31-btreemap.html</guid></item><item><title>Caches</title><link>http://www.mapdb.org/15-caches.html</link><description>MapDB has several options to cache deserialized objects. Proper cache configuration is crucial for good performance of your application. Many performance problems can be fixed just by changing cache settings.</description><pubDate>Thu, 06 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/15-caches.html</guid></item><item><title>Durability and speed</title><link>http://www.mapdb.org/12-durability-versus-speed.html</link><description>There are several configuration options to make compromises between durability and speed. You may choose consistency, disk access patterns, commit type, flush type and so on. </description><pubDate>Thu, 06 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/12-durability-versus-speed.html</guid></item><item><title>Getting started</title><link>http://www.mapdb.org/02-getting-started.html</link><description>MapDB has very power-full API, but for 99% cases you need just two classes: DBMaker is builder style factory for configuring and opening a database. It has handful of static ‘newXXX’ methods for particular storage mode. DB represents storage. It has methods for accessing Maps and other collections. It also controls DB life-cycle with commit, rollback and close methods.</description><pubDate>Thu, 06 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/02-getting-started.html</guid></item><item><title>HTreeMap</title><link>http://www.mapdb.org/32-htreemap.html</link><description>HTreeMap (aka HashMap) is one of Maps offered by MapDB. It has great performance with large keys. It also offers entry expiration if time-to-live or maximal size is exceeded.</description><pubDate>Thu, 06 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/32-htreemap.html</guid></item><item><title>Intro</title><link>http://www.mapdb.org/00-intro.html</link><description>TODO intro text based on intro video</description><pubDate>Thu, 06 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/00-intro.html</guid></item><item><title>Queues</title><link>http://www.mapdb.org/33-queues.html</link><description>MapDB has three Queue implementations:</description><pubDate>Thu, 06 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/33-queues.html</guid></item><item><title>Quick intro to MapDB internals</title><link>http://www.mapdb.org/11-internals-quick-intro.html</link><description>This chapter gives 5 minutes introduction to MapDB internal architecture. Rest of this manual assume that you have read this chapter.</description><pubDate>Thu, 06 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/11-internals-quick-intro.html</guid></item><item><title>Secondary Collections</title><link>http://www.mapdb.org/41-secondary-collections.html</link><description>Rational databases have very good system of primary and secondary indexes, tables and views. It has clear benefits for extensibility, clarity and robustness. On other side it has limitations for scalability and performance. MapDBs Secondary Collections are poor man`s SQL tables. It brings most benefits without sacrificing flexibility.</description><pubDate>Thu, 06 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/41-secondary-collections.html</guid></item><item><title>Transactions</title><link>http://www.mapdb.org/13-transactions.html</link><description>Transactions in MapDB are considered heavyweight option. Often you can get similar result using atomic updates in ConcurrentMap and Atomic variables</description><pubDate>Thu, 06 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/13-transactions.html</guid></item><item><title>What is new</title><link>http://www.mapdb.org/01-what-is-new.html</link><description>TODO this will be change-log after 1.0.0 is released.</description><pubDate>Thu, 06 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/01-what-is-new.html</guid></item><item><title>`DBMaker and DB</title><link>http://www.mapdb.org/10-db-and-dbmaker.html</link><description>MapDB is set of loosely coupled components. One could wire classes such as CacheMRU, StoreWAL and BTreeMap manually, byt there are two factory classes to do it for you: DBMaker and DB. They use maker (builder) pattern, so most configuration options are quickly available via code assistant in IDE. </description><pubDate>Thu, 06 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/10-db-and-dbmaker.html</guid></item><item><title>Benchmarks</title><link>http://www.mapdb.org/benchmarks.html</link><description>Graphs bellow compare off-heap in-memory BTreeMap from MapDB and ConcurrentSkipListMap from JDK. MapDB speed is comparable to Java collections, despite using serialization and its own memory management. </description><pubDate>Wed, 19 Feb 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/benchmarks.html</guid></item><item><title>Ideas</title><link>http://www.mapdb.org/idea.html</link><description>Back to top</description><pubDate>Tue, 15 Jul 2014 00:00:00 GMT</pubDate><guid>http://www.mapdb.org/idea.html</guid></item></channel></rss>